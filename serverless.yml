service: password-manager
frameworkVersion: '2'

plugins:
  - serverless-python-requirements

custom:
  env-file: ${file(resources/environment-${opt:stage, self:provider.stage, 'dev'}.yml)}


provider:
  name: aws
  runtime: python3.8
  stage: ${opt:stage, 'dev'}
  region: us-east-1
  environment: ${file(resources/environment-${opt:stage, self:provider.stage, 'dev'}.yml)}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: ${self:custom.env-file.password-table}

package:
  individually: true
  include:
    - src/**


functions:
  createPassword:
    handler: password_controller.create_password_controller
    module: src/application/password
    memorySize: 128
    events:
      - http:
          path: passwords/
          method: post
          cors: true

  getPasswords:
    handler: password_controller.get_passwords
    module: src/application/password
    memorySize: 256
    events:
      - http:
          path: passwords/
          method: get
          cors: true

  getPassword:
    handler: password_controller.get_password
    module: src/application/password
    memorySize: 128
    events:
      - http:
          path: passwords/{password_id}
          method: get
          cors: true
